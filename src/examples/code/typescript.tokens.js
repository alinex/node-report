TokenList {
  data: 
   [ { type: 'document', nesting: 1, level: 0 },
     { type: 'code',
       nesting: 1,
       language: 'typescript',
       level: 1,
       parent: [Object] },
     { type: 'text',
       content: 'class MyClass {\n  public static myValue: string;\n  constructor(init: string) {\n    this.myValue = init;\n  }\n}\nimport fs = require("fs");\nmodule MyModule {\n  export interface MyInterface extends Other {\n    myProperty: any;\n  }\n}\ndeclare magicNumber number;\nmyArray.forEach(() => { }); // fat arrow syntax',
       level: 2,
       parent: [Object] },
     { type: 'code',
       nesting: -1,
       language: 'typescript',
       level: 1,
       parent: [Object] },
     { type: 'document', nesting: -1, level: 0 } ],
  pos: 4,
  token: 
   { type: 'code',
     nesting: -1,
     language: 'typescript',
     level: 1,
     parent: { type: 'document', nesting: 1, level: 0 } } }