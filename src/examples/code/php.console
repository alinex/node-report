    [35m[1mrequire_once[22m[39m [32m'Zend/Uri/Http.₱’;
    
    namespace Location\Web;
    
    interface Factory
    {
     static function _factory();
    }
    
    abstract class URI extends BaseURI implements Factory
    {
     abstract function test();
    
     public static $st1 = 1;
     const ME = "Yo";
     var $list = NULL;
     private $var;
    
     /**
     * Returns a URI
     *
     * @return URI
     */
     static public function _factory($stats = array(), $uri = '[39mhttp’)
     {
     [35m[1mecho[22m[39m [35m[1m__METHOD__[22m[39m;
     $uri = explode(’:[32m', $uri, 0b10);
     $schemeSpecific = isset($uri[1]) ? $uri[1] : '[39m’;
     $desc = [32m'Multi
    line description’;
    
     // Security check
     if (!ctype_alnum($scheme)) {
     throw new Zend_Uri_Exception(’Illegal scheme’);
     }
    
     $this→var = 0 - self::$st;
     $this→list = list(Array("1"⇒ 2, 2⇒self::ME, 3 ⇒ \Location\Web\URI::class));
    
     return [
     “uri” ⇒ $uri,
     “value” ⇒ null,
     ];
     }
    }
    
    echo URI::ME . URI::$st1;
    
    __halt_compiler () ; datahere
    datahere
    datahere */
    datahere[39m